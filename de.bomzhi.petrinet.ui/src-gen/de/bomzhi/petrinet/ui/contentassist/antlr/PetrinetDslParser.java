/*
* generated by Xtext
*/
package de.bomzhi.petrinet.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.bomzhi.petrinet.services.PetrinetDslGrammarAccess;

public class PetrinetDslParser extends AbstractContentAssistParser {
	
	@Inject
	private PetrinetDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.bomzhi.petrinet.ui.contentassist.antlr.internal.InternalPetrinetDslParser createParser() {
		de.bomzhi.petrinet.ui.contentassist.antlr.internal.InternalPetrinetDslParser result = new de.bomzhi.petrinet.ui.contentassist.antlr.internal.InternalPetrinetDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getStorageAccess().getAlternatives_4(), "rule__Storage__Alternatives_4");
					put(grammarAccess.getPetriNetAccess().getGroup(), "rule__PetriNet__Group__0");
					put(grammarAccess.getResourceAccess().getGroup(), "rule__Resource__Group__0");
					put(grammarAccess.getPlaceAccess().getGroup(), "rule__Place__Group__0");
					put(grammarAccess.getStorageAccess().getGroup(), "rule__Storage__Group__0");
					put(grammarAccess.getTransactionAccess().getGroup(), "rule__Transaction__Group__0");
					put(grammarAccess.getAssureStatementAccess().getGroup(), "rule__AssureStatement__Group__0");
					put(grammarAccess.getTakeStatementAccess().getGroup(), "rule__TakeStatement__Group__0");
					put(grammarAccess.getPutStatementAccess().getGroup(), "rule__PutStatement__Group__0");
					put(grammarAccess.getPetriNetAccess().getResourcesAssignment_0(), "rule__PetriNet__ResourcesAssignment_0");
					put(grammarAccess.getPetriNetAccess().getPlacesAssignment_1(), "rule__PetriNet__PlacesAssignment_1");
					put(grammarAccess.getPetriNetAccess().getTransactionsAssignment_2(), "rule__PetriNet__TransactionsAssignment_2");
					put(grammarAccess.getResourceAccess().getNameAssignment_1(), "rule__Resource__NameAssignment_1");
					put(grammarAccess.getPlaceAccess().getNameAssignment_1(), "rule__Place__NameAssignment_1");
					put(grammarAccess.getPlaceAccess().getStoragesAssignment_3(), "rule__Place__StoragesAssignment_3");
					put(grammarAccess.getStorageAccess().getResourceRefAssignment_0(), "rule__Storage__ResourceRefAssignment_0");
					put(grammarAccess.getStorageAccess().getCountAssignment_2(), "rule__Storage__CountAssignment_2");
					put(grammarAccess.getStorageAccess().getCapacityAssignment_4_0(), "rule__Storage__CapacityAssignment_4_0");
					put(grammarAccess.getTransactionAccess().getNameAssignment_1(), "rule__Transaction__NameAssignment_1");
					put(grammarAccess.getTransactionAccess().getAssureStatementsAssignment_3(), "rule__Transaction__AssureStatementsAssignment_3");
					put(grammarAccess.getTransactionAccess().getTakeStatementsAssignment_4(), "rule__Transaction__TakeStatementsAssignment_4");
					put(grammarAccess.getTransactionAccess().getPutStatementsAssignment_5(), "rule__Transaction__PutStatementsAssignment_5");
					put(grammarAccess.getAssureStatementAccess().getCountAssignment_1(), "rule__AssureStatement__CountAssignment_1");
					put(grammarAccess.getAssureStatementAccess().getResourceRefAssignment_2(), "rule__AssureStatement__ResourceRefAssignment_2");
					put(grammarAccess.getAssureStatementAccess().getPlaceRefAssignment_4(), "rule__AssureStatement__PlaceRefAssignment_4");
					put(grammarAccess.getTakeStatementAccess().getCountAssignment_1(), "rule__TakeStatement__CountAssignment_1");
					put(grammarAccess.getTakeStatementAccess().getResourceRefAssignment_2(), "rule__TakeStatement__ResourceRefAssignment_2");
					put(grammarAccess.getTakeStatementAccess().getPlaceRefAssignment_4(), "rule__TakeStatement__PlaceRefAssignment_4");
					put(grammarAccess.getPutStatementAccess().getCountAssignment_1(), "rule__PutStatement__CountAssignment_1");
					put(grammarAccess.getPutStatementAccess().getResourceRefAssignment_2(), "rule__PutStatement__ResourceRefAssignment_2");
					put(grammarAccess.getPutStatementAccess().getPlaceRefAssignment_4(), "rule__PutStatement__PlaceRefAssignment_4");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.bomzhi.petrinet.ui.contentassist.antlr.internal.InternalPetrinetDslParser typedParser = (de.bomzhi.petrinet.ui.contentassist.antlr.internal.InternalPetrinetDslParser) parser;
			typedParser.entryRulePetriNet();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public PetrinetDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(PetrinetDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
